# Interpolacion de Lagrange
# divisoresL solo para mostrar valores
import numpy as np
import sympy as sym
import matplotlib.pyplot as plt

# INGRESO , Datos de prueba
xi = np.array([-2, 0, 1, 2])
fxi = np.array([-8, 0, 1, 8])

# PROCEDIMIENTO
# Polinomio de Lagrange
n = len(xi)
x = sym.Symbol('x')
polinomio = 0
divisorL = np.zeros(n, dtype=float)
for i in range(0, n, 1):

    # Termino de Lagrange
    numerador = 1
    denominador = 1
    for j in range(0, n, 1):
        if (j != i):
            numerador = numerador * (x - xi[j])
            denominador = denominador * (xi[i] - xi[j])
    terminoLi = numerador / denominador

    polinomio = polinomio + terminoLi * fxi[i]
    divisorL[i] = denominador

# simplifica el polinomio
polisimple = polinomio.expand()

# para evaluación numérica
px = sym.lambdify(x, polisimple)

# Puntos para la gráfica
muestras = 101
a = np.min(xi)
b = np.max(xi)
pxi = np.linspace(a, b, muestras)
pfxi = px(pxi)

# SALIDA
print('    valores de fi: ', fxi)
print('divisores en L(i): ', divisorL)
print()
print('Polinomio de Lagrange, expresiones')
print(polinomio)
print()
print('Polinomio de Lagrange: ')
print(polisimple)

# Gráfica
plt.plot(xi, fxi, 'o', label='Puntos')
plt.plot(pxi, pfxi, label='Polinomio')
plt.legend()
plt.xlabel('xi')
plt.ylabel('fxi')
plt.title('Interpolación Lagrange')
plt.show()
